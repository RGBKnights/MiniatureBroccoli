name: Deploy to Azure Functions

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: markitdown-function-app # set this to your application's name
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "src" # updated path to match our project structure
  PYTHON_VERSION: "3.10" # set this to the Python version to use

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4

      - name: Setup Python ${{ env.PYTHON_VERSION }} Environment
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: "Resolve Project Dependencies Using Pip"
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          python -m pip install --upgrade pip
          
          # Create .python_packages directory if it doesn't exist
          mkdir -p .python_packages/lib/site-packages
          
          # Install dependencies - using all optional dependencies for markitdown
          pip install -r requirements.txt --target=".python_packages/lib/site-packages"
          
          # Check if dependencies were installed correctly
          ls -la .python_packages/lib/site-packages
          popd

      - name: "Run Function Core Tools Package"
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          
          # Install Azure Functions Core Tools if needed
          # npm install -g azure-functions-core-tools@4 --unsafe-perm true
          
          # Package the function app
          # func pack --build-native-deps
          
          popd

      - name: "Build and Deploy to Azure Functions"
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
          scm-do-build-during-deployment: true
          enable-oryx-build: true

      - name: "Post Deployment Status"
        if: success()
        run: |
          echo "Deployment completed successfully!"
          echo "App URL: https://${{ env.AZURE_FUNCTIONAPP_NAME }}.azurewebsites.net/api/convert"
